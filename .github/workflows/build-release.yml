name: Build and Release

on:
  schedule:
    - cron: 0 * * * *
  push:
    branches:
      - "master"
  workflow_dispatch:

env:
  CACHE_DIR: ~/cache

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_NAME: ${{ env.PACKAGE_NAME }}
      PACKAGE_NAME1: ${{ env.PACKAGE_NAME_SHORT }}
      COMMIT_MSG: ${{ env.COMMIT_MSG }}
      TAG: ${{ env.TAG }}
      ver: ${{ env.ver }}
      hash: ${{ env.hash }}
      commit: ${{ env.commit }}
      ARCH_ALL: ${{ env.ARCH_ALL }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Git init
        run: |
            sed -i '/url =/d' ./.git/config
            git config --local user.name "actions"
            git config --local user.email "action@github.com"
            git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
      - name: Check Smartdns
        run: |
          latest=$(curl -sL https://github.com/pymumu/smartdns/releases )
          ver="1.$(date -d "8 hour" -u +%Y.%m.%d-%H%M)"
          commit=$(curl -sL https://github.com/pymumu/smartdns/commits/master |grep -o '/pymumu/smartdns/commit/[a-z0-9]\+' |head -1 | cut -d\/ -f5)
          shortCommit=$(echo $commit |cut -c 1-20)
          if ! git log --oneline |grep -q "$shortCommit"; then
            sed -i -e '/^PKG_MIRROR_HASH/s#=.*#=skip#' -e "/^PKG_VERSION/s#=.*#=$ver#" -e "/^PKG_SOURCE_VERSION/s#=.*#=$commit#" smartdns/Makefile
            git add --all
            sed -i '/PACKAGE_NAME/,$d' $GITHUB_ENV
            echo "PACKAGE_NAME=smartdns" >> $GITHUB_ENV
            echo "PACKAGE_NAME_SHORT=smartdns" >> $GITHUB_ENV
            echo "COMMIT_MSG=smartdns_$ver $commit" >> $GITHUB_ENV
            echo "TAG=smartdns_$ver" >> $GITHUB_ENV
            echo "hash=skip" >> $GITHUB_ENV
            echo "ver=$ver" >> $GITHUB_ENV
            echo "commit=$commit" >> $GITHUB_ENV
            echo "ARCH_ALL=" >> $GITHUB_ENV
          fi
      - name: Check Xray
        run: |
          latest=$(curl -sL https://github.com/XTLS/Xray-core/releases )
          ver=$(echo "$latest"|grep -o 'tree/v[0-9]\+\.[0-9]\+\.[0-9]\+' |head -1 |cut -d v -f2)
          if ! git tag -l |grep -q "xray_v$ver"; then
            wget https://codeload.github.com/XTLS/Xray-core/tar.gz/v$ver
            hash=$(sha256sum v$ver |cut -d\  -f1)
            rm -f v$ver
            sed -i -e "/^PKG_HASH/s#=.*#=$hash#" -e "/^PKG_VERSION/s#=.*#=$ver#" xray/Makefile
            sed -i '/PACKAGE_NAME/,$d' $GITHUB_ENV
            echo "PACKAGE_NAME=xray-core" >> $GITHUB_ENV
            echo "PACKAGE_NAME_SHORT=xray" >> $GITHUB_ENV
            echo "COMMIT_MSG=xray_v$ver" >> $GITHUB_ENV
            echo "TAG=xray_v$ver" >> $GITHUB_ENV
            echo "hash=$hash" >> $GITHUB_ENV
            echo "ver=$ver" >> $GITHUB_ENV
            echo "commit=" >> $GITHUB_ENV
            echo "ARCH_ALL=" >> $GITHUB_ENV
          fi
      - name: Check V2ray
        run: |
          latest=$(curl -sL https://github.com/v2fly/v2ray-core/releases/latest )
          ver=$(echo "$latest"|grep -o 'tree/v[0-9]\+\.[0-9]\+\.[0-9]\+' |head -1 |cut -d v -f2)
          if ! git tag -l |grep -q "v2ray_v$ver"; then
            wget https://codeload.github.com/v2fly/v2ray-core/tar.gz/v$ver
            hash=$(sha256sum v$ver |cut -d\  -f1)
            rm -f v$ver
            sed -i -e "/^PKG_HASH/s#=.*#=$hash#" -e "/^PKG_VERSION/s#=.*#=$ver#" v2ray/Makefile
            sed -i '/PACKAGE_NAME/,$d' $GITHUB_ENV
            echo "PACKAGE_NAME=v2ray-core" >> $GITHUB_ENV
            echo "PACKAGE_NAME_SHORT=v2ray" >> $GITHUB_ENV
            echo "COMMIT_MSG=v2ray_v$ver" >> $GITHUB_ENV
            echo "TAG=v2ray_v$ver" >> $GITHUB_ENV
            echo "hash=$hash" >> $GITHUB_ENV
            echo "ver=$ver" >> $GITHUB_ENV
            echo "commit=" >> $GITHUB_ENV
            echo "ARCH_ALL=" >> $GITHUB_ENV
          fi
      - name: Check Passwall2
        run: |
          commit=$(curl -sL https://github.com/xiaorouji/openwrt-passwall2/commits/main |grep -o '/xiaorouji/openwrt-passwall2/commit/[a-z0-9]\+' |head -1 | cut -d\/ -f5)
          shortCommit=$(echo $commit |cut -c 1-20)
          if ! git log --oneline |grep -q "$shortCommit"; then
            wget -O /tmp/main.zip https://github.com/xiaorouji/openwrt-passwall2/archive/refs/heads/main.zip
            unzip /tmp/main.zip openwrt-passwall2-main/luci-app-passwall2* -d /tmp
            rm -rf luci-app-passwall2
            mv -f  /tmp/openwrt-passwall2-main/luci-app-passwall2 luci-app-passwall2
            ver=$(grep 'PKG_VERSION' luci-app-passwall2/Makefile |cut -d\= -f2)
            rel=$(grep 'PKG_RELEASE' luci-app-passwall2/Makefile |cut -d\= -f2)
            git add --all
            sed -i '/PACKAGE_NAME/,$d' $GITHUB_ENV
            echo "PACKAGE_NAME=luci-app-passwall2" >> $GITHUB_ENV
            echo "PACKAGE_NAME_SHORT=luci-app-passwall2" >> $GITHUB_ENV
            echo "COMMIT_MSG=luci-app-passwall2_$ver-$rel $commit" >> $GITHUB_ENV
            echo "TAG=passwall2_$ver-$rel" >> $GITHUB_ENV
            echo "ver=$ver" >> $GITHUB_ENV
            echo "commit=$commit" >> $GITHUB_ENV
            echo "ARCH_ALL=y" >> $GITHUB_ENV
          fi
      - name: Set Variables
        id: set
        run: |
          echo "::set-output name=PACKAGE_NAME::$PACKAGE_NAME"
          echo "::set-output name=PACKAGE_NAME_SHORT::$PACKAGE_NAME_SHORT"
          echo "::set-output name=COMMIT_MSG::$COMMIT_MSG"
          echo "::set-output name=TAG::$TAG"
          echo "::set-output name=ver::$ver"
          echo "::set-output name=commit::$commit"
          echo "::set-output name=hash::$hash"
          echo "::set-output name=ARCH_ALL::$ARCH_ALL"
      - name: Push to master
        if: ${{ env.COMMIT_MSG }}
        continue-on-error: true
        run: |
          git add --all
          git commit -m "$COMMIT_MSG"
          git push -u origin master
      - name: Upload To Artifact
        if: ${{ env.COMMIT_MSG }}
        uses: actions/upload-artifact@v2
        with:
          name: openwrt-ipk
          path: ${{ github.workspace }}
      
  release:
    needs: check
    if: ${{ needs.check.outputs.PACKAGE_NAME }}
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64_cortex-a53
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2710
            sdk_name: -sdk-bcm27xx-bcm2710_
          - arch: aarch64_cortex-a72
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa72
            sdk_name: -sdk-mvebu-cortexa72_
          - arch: aarch64_generic
            sdk_url_path: http://downloads.openwrt.org/snapshots/targets/layerscape/armv8_64b
            sdk_name: -sdk-layerscape-armv8_64b_
          - arch: arm_arm1176jzf-s_vfp
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2708
            sdk_name: -sdk-bcm27xx-bcm2708_
          #- arch: arm_arm926ej-s
          #  sdk_url_path: https://downloads.openwrt.org/snapshots/targets/at91/legacy
          #  sdk_name: -sdk-at91-legacy_
          - arch: arm_cortex-a15_neon-vfpv4
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/ipq806x/generic
            sdk_name: -sdk-ipq806x-generic_
          - arch: arm_cortex-a5-vfpv4
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/at91/sama5
            sdk_name: -sdk-at91-sama5_
          - arch: arm_cortex-a7_neon-vfpv4
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2709
            sdk_name: -sdk-bcm27xx-bcm2709_
          - arch: arm_cortex-a8_vfpv3
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/sunxi/cortexa8
            sdk_name: -sdk-sunxi-cortexa8_
          - arch: arm_cortex-a9
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm53xx/generic
            sdk_name: -sdk-bcm53xx-generic_
          - arch: arm_cortex-a9_neon
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/imx6/generic
            sdk_name: -sdk-imx6_
          - arch: arm_cortex-a9_vfpv3
            sdk_url_path: https://downloads.openwrt.org/releases/19.07.2/targets/mvebu/cortexa9
            sdk_name: -sdk-19.07.2-mvebu-cortexa9_
          - arch: arm_cortex-a9_vfpv3-d16
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa9
            sdk_name: -sdk-mvebu-cortexa9_
          - arch: arm_fa526
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/gemini/generic
            sdk_name: -sdk-gemini_
          - arch: arm_mpcore
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/oxnas/ox820
            sdk_name: -sdk-oxnas-ox820_
          # - arch: arm_mpcore_vfp
          #   sdk_url_path: https://downloads.openwrt.org/snapshots/targets/cns3xxx/generic
          #   sdk_name: -sdk-cns3xxx_
          - arch: arm_xscale
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/kirkwood/generic
            sdk_name: -sdk-kirkwood_
          - arch: i386_pentium
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/x86/legacy
            sdk_name: -sdk-x86-legacy_
          - arch: i386_pentium4
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/x86/generic
            sdk_name: -sdk-x86-generic_
          - arch: mips64_octeon
            sdk_url_path: http://downloads.openwrt.org/releases/18.06.5/targets/octeon/generic
            sdk_name: -sdk-18.06.5-octeon_
          - arch: mips64_octeonplus
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/octeon/generic
            sdk_name: -sdk-octeon_
          - arch: mipsel_24kc
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/ramips/mt7620
            sdk_name: -sdk-ramips-mt7620_
          - arch: mipsel_24kc_24kf
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/pistachio/generic
            sdk_name: -sdk-pistachio_
          - arch: mipsel_74kc
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm47xx/mips74k
            sdk_name: -sdk-bcm47xx-mips74k_
          - arch: mipsel_mips32
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm47xx/generic
            sdk_name: -sdk-bcm47xx-generic_
          - arch: mips_24kc
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/ath79/generic
            sdk_name: -sdk-ath79-generic_
          - arch: mips_mips32
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm63xx/generic
            sdk_name: -sdk-bcm63xx-generic_
          - arch: x86_64
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/x86/64
            sdk_name: -sdk-x86-64_
          # - arch: arc_arc700
          #   sdk_url_path: https://downloads.openwrt.org/snapshots/targets/arc770/generic
          #   sdk_name: -sdk-arc770-generic_
          # - arch: arc_archs
          #   sdk_url_path: https://downloads.openwrt.org/snapshots/targets/archs38/generic
          #   sdk_name: -sdk-archs38-generic_
          # - arch: armeb_xscale
          #   sdk_url_path: https://downloads.openwrt.org/snapshots/targets/ixp4xx/generic
          #   sdk_name: -sdk-ixp4xx-generic_
          # - arch: powerpc_464fp
          #   sdk_url_path: https://downloads.openwrt.org/snapshots/targets/apm821xx/nand
          #   sdk_name: -sdk-apm821xx-nand_
          # - arch: powerpc_8540
          #   sdk_url_path: https://downloads.openwrt.org/snapshots/targets/mpc85xx/generic
          #   sdk_name: -sdk-mpc85xx-generic_

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      PACKAGE_NAME: ${{ needs.check.outputs.PACKAGE_NAME }}
      PACKAGE_NAME1: ${{ needs.check.outputs.PACKAGE_NAME1 }}
      COMMIT_MSG: ${{ needs.check.outputs.COMMIT_MSG }}
      TAG: ${{ needs.check.outputs.TAG }}
      ver: ${{ needs.check.outputs.ver }}
      hash: ${{ needs.check.outputs.hash }}
      commit: ${{ needs.check.outputs.commit }}
      ARCH_ALL: ${{ needs.check.outputs.ARCH_ALL }}
      CCACHE_DIR: ~/.ccache
      CONFIG_CCACHE: y
    steps:
      - name: Is it ARCH for ALL?
        id: ARCH_ALL
        run: |
          if [ -z "${{ env.ARCH_ALL }}" ] || [ ${{ matrix.arch }} == "aarch64_generic" ]; then
            echo "全架构app"
            echo "::set-output name=status::n"
          fi

      - uses: actions/download-artifact@v2
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        with:
          name: openwrt-ipk

      - name: Display structure of downloaded files
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: ls -R

      - name: Set Variables
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: |
          if [ -n "${{ env.hash }}" ]; then sed -i -e "/^PKG_HASH/s#=.*#=${{ env.hash }}#" -e "/^PKG_MIRROR_HASH/s#=.*#=${{ env.hash }}#" ${{ env.PACKAGE_NAME1 }}/Makefile; fi
          if [ -n "${{ env.ver }}" ]; then sed -i "/^PKG_VERSION/s#=.*#=${{ env.ver }}#" ${{ env.PACKAGE_NAME1 }}/Makefile; fi
          if [ -n "${{ env.commit }}" ]; then sed -i "/^PKG_SOURCE_VERSION/s#=.*#=${{ env.commit }}#" ${{ env.PACKAGE_NAME1 }}/Makefile; fi

      - name: Prepare Cache Key
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        id: cache_key
        run: echo "::set-output name=timestamp::$(date +"%s")"

      - name: Setup Cache
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CACHE_DIR }}
            ${{ env.CCACHE_DIR }}
          key: openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-${{ steps.cache_key.outputs.timestamp }}
          restore-keys: |
            openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-
      - name: Install Dependencies
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ccache gettext libncurses5-dev xsltproc upx
      - name: Create Directories
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: |
          CACHE_DIR_SDK="$(eval echo "$CACHE_DIR/sdk")"
          CACHE_DIR_DL="$(eval echo "$CACHE_DIR/dl")"
          CACHE_DIR_FEEDS="$(eval echo "$CACHE_DIR/feeds")"
          echo "CACHE_DIR_SDK: $CACHE_DIR_SDK"
          echo "CACHE_DIR_DL: $CACHE_DIR_DL"
          echo "CACHE_DIR_FEEDS: $CACHE_DIR_FEEDS"
          test -d "$CACHE_DIR_SDK" || mkdir -p "$CACHE_DIR_SDK"
          test -d "$CACHE_DIR_DL" || mkdir -p "$CACHE_DIR_DL"
          test -d "$CACHE_DIR_FEEDS" || mkdir -p "$CACHE_DIR_FEEDS"
          echo "CACHE_DIR_SDK=$CACHE_DIR_SDK" >> $GITHUB_ENV
          echo "CACHE_DIR_DL=$CACHE_DIR_DL" >> $GITHUB_ENV
          echo "CACHE_DIR_FEEDS=$CACHE_DIR_FEEDS" >> $GITHUB_ENV
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV
      - name: Download and Unzip SDK
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: |
          cd "$CACHE_DIR_SDK"
          if ! ( wget -q -O - "$SDK_URL_PATH/sha256sums" | grep -- "$SDK_NAME" > sha256sums.small 2>/dev/null ) ; then
            echo "::error::Can not find ${SDK_NAME} file in sha256sums."
            exit 1
          fi
          SDK_FILE="$(cat sha256sums.small | cut -d' ' -f2 | sed 's/*//g')"
          if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
            wget -q -O "$SDK_FILE" "$SDK_URL_PATH/$SDK_FILE"
            if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
              echo "::error::SDK can not be verified!"
              exit 1
            fi
          fi
          cd -
          file "$CACHE_DIR_SDK/$SDK_FILE"
          tar -Jxf "$CACHE_DIR_SDK/$SDK_FILE" -C "$SDK_HOME" --strip=1
          cd "$SDK_HOME"
          test -d "dl" && rm -rf "dl" || true
          test -d "feeds" && rm -rf "feeds" || true
          ln -s "$CACHE_DIR_DL" "dl"
          ln -s "$CACHE_DIR_FEEDS" "feeds"
          cp feeds.conf.default feeds.conf
          sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
          sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
          sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
          sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
          cd -
      - name: Update and Install Packages
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        env:
          OPENWRT_GOLANG_COMMIT: ${{ secrets.OPENWRT_GOLANG_COMMIT }}
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds update -a
          test -d "feeds/packages/net/$PACKAGE_NAME" && rm -rf "feeds/packages/net/$PACKAGE_NAME" || true
          test -d "feeds/packages/lang/golang" && rm -rf "feeds/packages/lang/golang" || true
          curl https://codeload.github.com/openwrt/packages/tar.gz/${OPENWRT_GOLANG_COMMIT:-master} | tar -xz -C "feeds/packages/lang" --strip=2 packages-${OPENWRT_GOLANG_COMMIT:-master}/lang/golang
          ln -s "${{ github.workspace }}/${{ env.PACKAGE_NAME1 }}" "package/$PACKAGE_NAME"
          ./scripts/feeds install -a
          cd -
      - name: Build Packages
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: |
          cd "$SDK_HOME"
          make defconfig
          if grep -q 'PKG_MIRROR_HASH.*skip' ${PACKAGE_NAME}/Makefile; then
            make package/${PACKAGE_NAME}/download V=s
            make package/${PACKAGE_NAME}/check FIXUP=1 V=s
          fi
          make package/${PACKAGE_NAME}/{clean,compile} V=s
          find "$SDK_HOME/bin/" -type f -name "*.ipk" -exec ls -lh {} \;
          cd -
      - name: Copy Bin Files
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        run: |
          find "$SDK_HOME/bin/" -type f -name "*${PACKAGE_NAME1}*.ipk" -exec cp {} "${{ github.workspace }}" \;
          find "${{ github.workspace }}" -type f -name "*.ipk" -exec ls -lh {} \;
      - name: Upload files to Artifacts
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TAG }}-${{ matrix.arch }}
          path: |
            *.ipk
      - name: Release and Upload Assets
        if: ${{ steps.ARCH_ALL.outputs.status == 'n' }}
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TAG }}
          tag_name: ${{ env.TAG }}
          body: ${{ env.COMMIT_MSG }}
          files: '*.ipk'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
